'--------------------------------------------------------------------------------
'vWATCH64 initialization code - version 1.104:
'--------------------------------------------------------------------------------
DECLARE LIBRARY
    FUNCTION vwatch64_GETPID& ALIAS getpid ()
END DECLARE

DECLARE LIBRARY "timers"
    SUB VWATCH64_STOPTIMERS ALIAS stop_timers
    SUB VWATCH64_STARTTIMERS ALIAS start_timers
END DECLARE

CONST vwatch64_ID = "vWATCH64"
CONST vwatch64_VERSION = "1.104"
CONST vwatch64_CHECKSUM = "E24275A4"
CONST vwatch64_FILENAME = "C:\Documents and Settings\Administrator\Desktop\qb64\vwatch64.dat"

'Breakpoint control:
CONST vwatch64_CONTINUE = 1
CONST vwatch64_NEXTSTEP = 2
CONST vwatch64_READY = 3
CONST vwatch64_SETVAR = 4
CONST vwatch64_SKIPSUB = 5
CONST vwatch64_SETNEXT = 7

TYPE vwatch64_HEADERTYPE
    CLIENT_ID AS STRING * 8
    VERSION AS STRING * 5
    CONNECTED AS _BYTE
    RESPONSE AS _BYTE
    PID AS LONG
END TYPE

TYPE vwatch64_CLIENTTYPE
    NAME AS STRING * 256
    CHECKSUM AS STRING * 8
    TOTALSOURCELINES AS LONG
    EXENAME AS STRING * 256
    LINENUMBER AS LONG
    TOTALVARIABLES AS LONG
    PID AS LONG
END TYPE

TYPE vwatch64_BREAKPOINTTYPE
    ACTION AS _BYTE
    LINENUMBER AS LONG
END TYPE


TYPE vwatch64_VARIABLESTYPE
    NAME AS STRING * 256
    SCOPE AS STRING * 50
    UDT AS STRING * 40
    DATATYPE AS STRING * 20
END TYPE

TYPE vwatch64_VARIABLEVALUETYPE
    VALUE AS STRING * 256
END TYPE

DIM SHARED vwatch64_BREAKPOINT AS vwatch64_BREAKPOINTTYPE
DIM SHARED vwatch64_WATCHPOINTCOMMAND AS vwatch64_BREAKPOINTTYPE
DIM SHARED vwatch64_WATCHPOINTCOMMANDBLOCK AS LONG
DIM SHARED vwatch64_BREAKPOINTBLOCK AS LONG
DIM SHARED vwatch64_BREAKPOINTLISTBLOCK AS LONG
DIM SHARED vwatch64_BREAKPOINTLIST AS STRING * 120
DIM SHARED vwatch64_CLIENT AS vwatch64_CLIENTTYPE
DIM SHARED vwatch64_CLIENTBLOCK AS LONG
DIM SHARED vwatch64_CLIENTFILE AS INTEGER
DIM SHARED vwatch64_DATAINFOBLOCK AS LONG
DIM SHARED vwatch64_DATABLOCK AS LONG
DIM SHARED vwatch64_EXCHANGEBLOCK AS LONG
DIM SHARED vwatch64_WATCHPOINTLISTBLOCK AS LONG
DIM SHARED vwatch64_WATCHPOINTEXPBLOCK AS LONG
DIM SHARED vwatch64_HEADER AS vwatch64_HEADERTYPE
DIM SHARED vwatch64_HEADERBLOCK AS LONG
DIM SHARED vwatch64_USERQUIT AS _BYTE
DIM SHARED vwatch64_NEXTLINE AS LONG
DIM SHARED vwatch64_SUBLEVEL AS INTEGER
DIM SHARED vwatch64_TARGETVARINDEX AS LONG
DIM SHARED vwatch64_TIMER AS INTEGER
DIM SHARED vwatch64_EXCHANGEDATASIZE$4
DIM SHARED vwatch64_EXCHANGEDATA AS STRING
DIM SHARED vWATCH64_DUMMY%%

DIM SHARED vwatch64_VARIABLES(1 TO 12) AS vwatch64_VARIABLESTYPE
DIM SHARED vwatch64_VARIABLEDATA(1 TO 12) AS vwatch64_VARIABLEVALUETYPE
DIM SHARED vwatch64_WATCHPOINTLIST AS STRING * 12
DIM SHARED vwatch64_WATCHPOINT(1 TO 12) AS vwatch64_VARIABLEVALUETYPE
vwatch64_VARIABLES(1).NAME = "client"
vwatch64_VARIABLES(1).SCOPE = "SHARED"
vwatch64_VARIABLES(1).DATATYPE = "LONG"
vwatch64_VARIABLES(2).NAME = "host"
vwatch64_VARIABLES(2).SCOPE = "SHARED"
vwatch64_VARIABLES(2).DATATYPE = "LONG"
vwatch64_VARIABLES(3).NAME = "channel"
vwatch64_VARIABLES(3).SCOPE = "SUB Send"
vwatch64_VARIABLES(3).DATATYPE = "SINGLE"
vwatch64_VARIABLES(4).NAME = "__theData$"
vwatch64_VARIABLES(4).SCOPE = "SUB Send"
vwatch64_VARIABLES(4).DATATYPE = "STRING"
vwatch64_VARIABLES(5).NAME = "a$"
vwatch64_VARIABLES(5).SCOPE = "MAIN MODULE"
vwatch64_VARIABLES(5).DATATYPE = "STRING"
vwatch64_VARIABLES(6).NAME = "incomingData$"
vwatch64_VARIABLES(6).SCOPE = "MAIN MODULE"
vwatch64_VARIABLES(6).DATATYPE = "STRING"
vwatch64_VARIABLES(7).NAME = "stream$"
vwatch64_VARIABLES(7).SCOPE = "MAIN MODULE"
vwatch64_VARIABLES(7).DATATYPE = "STRING"
vwatch64_VARIABLES(8).NAME = "thisData$"
vwatch64_VARIABLES(8).SCOPE = "MAIN MODULE"
vwatch64_VARIABLES(8).DATATYPE = "STRING"
vwatch64_VARIABLES(9).NAME = "thisCommand$"
vwatch64_VARIABLES(9).SCOPE = "MAIN MODULE"
vwatch64_VARIABLES(9).DATATYPE = "STRING"
vwatch64_VARIABLES(10).NAME = "myData$"
vwatch64_VARIABLES(10).SCOPE = "MAIN MODULE"
vwatch64_VARIABLES(10).DATATYPE = "STRING"
vwatch64_VARIABLES(11).NAME = "c$"
vwatch64_VARIABLES(11).SCOPE = "MAIN MODULE"
vwatch64_VARIABLES(11).DATATYPE = "STRING"
vwatch64_VARIABLES(12).NAME = "theData$"
vwatch64_VARIABLES(12).SCOPE = "SUB Send"
vwatch64_VARIABLES(12).DATATYPE = "STRING"

vwatch64_HEADERBLOCK = 1
vwatch64_CLIENTBLOCK = LEN(vwatch64_HEADER) + 1
vwatch64_BREAKPOINTBLOCK = vwatch64_CLIENTBLOCK + LEN(vwatch64_CLIENT) + 1
vwatch64_BREAKPOINTLISTBLOCK = vwatch64_BREAKPOINTBLOCK + LEN(vwatch64_BREAKPOINT) + 1
vwatch64_DATAINFOBLOCK = vwatch64_BREAKPOINTLISTBLOCK + LEN(vwatch64_BREAKPOINTLIST) + 1
vwatch64_DATABLOCK = vwatch64_DATAINFOBLOCK + LEN(vwatch64_VARIABLES()) + 1
vwatch64_WATCHPOINTLISTBLOCK = vwatch64_DATABLOCK + LEN(vwatch64_VARIABLEDATA()) + 1
vwatch64_WATCHPOINTEXPBLOCK = vwatch64_WATCHPOINTLISTBLOCK + LEN(vwatch64_WATCHPOINTLIST) + 1
vwatch64_WATCHPOINTCOMMANDBLOCK = vwatch64_WATCHPOINTEXPBLOCK + LEN(vwatch64_WATCHPOINT()) + 1
vwatch64_EXCHANGEBLOCK = vwatch64_WATCHPOINTCOMMANDBLOCK + LEN(vwatch64_WATCHPOINTCOMMAND) + 1

vwatch64_CONNECTTOHOST

'Initialize the data export timer:
vwatch64_TIMER = _FREETIMER
ON TIMER(vwatch64_TIMER, .1) vwatch64_VARIABLEWATCH
TIMER(vwatch64_TIMER) ON

'--------------------------------------------------------------------------------
'End of vWATCH64 initialization code.
'--------------------------------------------------------------------------------

DIM SHARED client AS LONG, host AS LONG

vwatch64_LABEL_3:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(3): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_3 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_3
PRINT "Connecting to host...";
vwatch64_SKIP_3:::: 
vwatch64_LABEL_4:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(4): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_4 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_4
host = _OPENCLIENT("TCP/IP:60710:localhost")
vwatch64_SKIP_4:::: 
vwatch64_LABEL_5:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(5): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_5 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_5
IF host = 0 THEN
vwatch64_SKIP_5:::: 

    'this is the host program

vwatch64_LABEL_9:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(9): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_9 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_9
    PRINT "not found."
vwatch64_SKIP_9:::: 
vwatch64_LABEL_10:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(10): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_10 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_10
    PRINT "Starting host...";
vwatch64_SKIP_10:::: 
vwatch64_LABEL_11:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(11): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_11 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_11
    host = _OPENHOST("TCP/IP:60710")
vwatch64_SKIP_11:::: 
vwatch64_LABEL_12:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(12): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_12 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_12
    IF host THEN
vwatch64_SKIP_12:::: 
vwatch64_LABEL_13:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(13): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_13 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_13
        PRINT "done."
vwatch64_SKIP_13:::: 
vwatch64_LABEL_14:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(14): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_14 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_14
        DO
vwatch64_SKIP_14:::: 
vwatch64_LABEL_15:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(15): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_15 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_15
            PRINT "Listening on port 60710..."
vwatch64_SKIP_15:::: 
vwatch64_LABEL_16:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(16): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_16 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_16
            SHELL _DONTWAIT COMMAND$(0) 'start second instance
vwatch64_SKIP_16:::: 
vwatch64_LABEL_17:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(17): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_17 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_17
            DO
vwatch64_SKIP_17:::: 
vwatch64_LABEL_18:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(18): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_18 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_18
                client = _OPENCONNECTION(host)
vwatch64_SKIP_18:::: 
vwatch64_LABEL_19:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(19): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_19 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_19
                _LIMIT 30
vwatch64_SKIP_19:::: 
vwatch64_LABEL_20:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(20): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_20 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_20
            LOOP UNTIL client
vwatch64_SKIP_20:::: 

vwatch64_LABEL_22:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(22): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_22 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_22
            a$ = "MSG>HELLO!"
vwatch64_SKIP_22:::: 
vwatch64_LABEL_23:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(23): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_23 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_23
            Send client, a$
vwatch64_SKIP_23:::: 
vwatch64_LABEL_24:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(24): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_24 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_24
            PRINT "Connected. Waiting for requests..."
vwatch64_SKIP_24:::: 

vwatch64_LABEL_26:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(26): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_26 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_26
            DO
vwatch64_SKIP_26:::: 
vwatch64_LABEL_27:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(27): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_27 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_27
                incomingData$ = ""
vwatch64_SKIP_27:::: 
vwatch64_LABEL_28:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(28): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_28 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_28
                GET #client, , incomingData$
vwatch64_SKIP_28:::: 
vwatch64_LABEL_29:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(29): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_29 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_29
                stream$ = stream$ + incomingData$
vwatch64_SKIP_29:::: 

vwatch64_LABEL_31:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(31): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_31 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_31
                DO WHILE INSTR(stream$, "<END>") > 0
vwatch64_SKIP_31:::: 
                    'process requests from the client
                    'custom format: REQUEST>data to be sent<END>

                    'separate command, data and remove this command from the stream
vwatch64_LABEL_36:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(36): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_36 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_36
                    thisData$ = LEFT$(stream$, INSTR(stream$, "<END>") - 1)
vwatch64_SKIP_36:::: 
vwatch64_LABEL_37:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(37): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_37 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_37
                    stream$ = MID$(stream$, INSTR(stream$, "<END>") + 5)
vwatch64_SKIP_37:::: 
vwatch64_LABEL_38:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(38): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_38 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_38
                    thisCommand$ = LEFT$(thisData$, INSTR(thisData$, ">") - 1)
vwatch64_SKIP_38:::: 
vwatch64_LABEL_39:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(39): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_39 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_39
                    thisData$ = MID$(thisData$, LEN(thisCommand$) + 1)
vwatch64_SKIP_39:::: 

vwatch64_LABEL_41:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(41): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_41 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_41
                    PRINT "Received: "; UCASE$(thisCommand$)
vwatch64_SKIP_41:::: 

vwatch64_LABEL_43:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(43): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_43 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_43
                    SELECT CASE UCASE$(thisCommand$)
vwatch64_SKIP_43:::: 
                        CASE "TIME"
vwatch64_LABEL_45:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(45): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_45 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_45
                            myData$ = "MSG>" + TIME$
vwatch64_SKIP_45:::: 
vwatch64_LABEL_46:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(46): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_46 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_46
                            Send client, myData$
vwatch64_SKIP_46:::: 
                        CASE "DATE"
vwatch64_LABEL_48:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(48): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_48 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_48
                            myData$ = "MSG>" + DATE$
vwatch64_SKIP_48:::: 
vwatch64_LABEL_49:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(49): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_49 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_49
                            Send client, myData$
vwatch64_SKIP_49:::: 
                        CASE "WISDOM"
vwatch64_LABEL_51:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(51): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_51 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_51
                            myData$ = "MSG>Time flies like bananas."
vwatch64_SKIP_51:::: 
vwatch64_LABEL_52:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(52): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_52 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_52
                            Send client, myData$
vwatch64_SKIP_52:::: 
                        CASE "MSG"
vwatch64_LABEL_54:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(54): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_54 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_54
                            PRINT thisData$
vwatch64_SKIP_54:::: 
                        CASE "BYE"
vwatch64_LABEL_56:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(56): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_56 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_56
                            PRINT thisData$
vwatch64_SKIP_56:::: 
vwatch64_LABEL_57:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(57): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_57 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_57
                            PRINT "Disconnected."
vwatch64_SKIP_57:::: 
vwatch64_LABEL_58:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(58): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_58 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_58
                            myData$ = "MSG>BYE!"
vwatch64_SKIP_58:::: 
vwatch64_LABEL_59:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(59): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_59 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_59
                            Send client, myData$
vwatch64_SKIP_59:::: 
vwatch64_LABEL_60:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(60): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_60 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_60
                            CLOSE client
vwatch64_SKIP_60:::: 
vwatch64_LABEL_61:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(61): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_61 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_61
                            client = 0
vwatch64_SKIP_61:::: 
vwatch64_LABEL_62:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(62): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_62 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_62
                            EXIT DO
vwatch64_SKIP_62:::: 
                    END SELECT
vwatch64_LABEL_64:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(64): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_64 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_64
                LOOP
vwatch64_SKIP_64:::: 

vwatch64_LABEL_66:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(66): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_66 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_66
                _LIMIT 30
vwatch64_SKIP_66:::: 
vwatch64_LABEL_67:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(67): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_67 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_67
            LOOP WHILE client
vwatch64_SKIP_67:::: 
vwatch64_LABEL_68:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(68): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_68 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_68
        LOOP
vwatch64_SKIP_68:::: 
vwatch64_LABEL_69:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(69): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_69 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_69
    ELSE
vwatch64_SKIP_69:::: 
vwatch64_LABEL_70:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(70): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_70 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_70
        PRINT "failed."
vwatch64_SKIP_70:::: 
vwatch64_LABEL_71:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(71): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_71 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_71
    END IF
vwatch64_SKIP_71:::: 
vwatch64_LABEL_72:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(72): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_72 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_72
ELSE
vwatch64_SKIP_72:::: 

    'this is the client program

vwatch64_LABEL_76:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(76): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_76 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_76
    PRINT
vwatch64_SKIP_76:::: 
vwatch64_LABEL_77:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(77): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_77 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_77
    PRINT "Connected."
vwatch64_SKIP_77:::: 

vwatch64_LABEL_79:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(79): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_79 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_79
    DO
vwatch64_SKIP_79:::: 
vwatch64_LABEL_80:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(80): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_80 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_80
        DO
vwatch64_SKIP_80:::: 
vwatch64_LABEL_81:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(81): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_81 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_81
            incomingData$ = ""
vwatch64_SKIP_81:::: 
vwatch64_LABEL_82:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(82): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_82 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_82
            GET #host, , incomingData$
vwatch64_SKIP_82:::: 
vwatch64_LABEL_83:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(83): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_83 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_83
            stream$ = stream$ + incomingData$
vwatch64_SKIP_83:::: 
vwatch64_LABEL_84:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(84): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_84 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_84
        LOOP WHILE LEN(incomingData$)
vwatch64_SKIP_84:::: 

vwatch64_LABEL_86:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(86): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_86 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_86
        DO WHILE INSTR(stream$, "<END>") > 0
vwatch64_SKIP_86:::: 
            'process responses from the host
            'custom format: RESPONSE>data received<END>

            'separate command, data and remove this command from the stream
vwatch64_LABEL_91:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(91): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_91 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_91
            thisData$ = LEFT$(stream$, INSTR(stream$, "<END>") - 1)
vwatch64_SKIP_91:::: 
vwatch64_LABEL_92:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(92): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_92 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_92
            thisCommand$ = LEFT$(thisData$, INSTR(thisData$, ">"))
vwatch64_SKIP_92:::: 
vwatch64_LABEL_93:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(93): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_93 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_93
            thisData$ = MID$(thisData$, LEN(thisCommand$) + 1)
vwatch64_SKIP_93:::: 
vwatch64_LABEL_94:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(94): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_94 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_94
            stream$ = MID$(stream$, INSTR(stream$, "<END>") + 5)
vwatch64_SKIP_94:::: 

vwatch64_LABEL_96:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(96): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_96 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_96
            SELECT CASE UCASE$(thisCommand$)
vwatch64_SKIP_96:::: 
                CASE "MSG"
vwatch64_LABEL_98:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(98): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_98 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_98
                    PRINT thisData$
vwatch64_SKIP_98:::: 
                CASE "BYE!"
vwatch64_LABEL_100:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(100): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_100 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_100
                    PRINT "Disconnected."
vwatch64_SKIP_100:::: 
vwatch64_LABEL_101:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(101): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_101 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_101
                    CLOSE host
vwatch64_SKIP_101:::: 
vwatch64_LABEL_102:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(102): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_102 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_102
ON ERROR GOTO vwatch64_FILEERROR
IF vwatch64_HEADER.CONNECTED THEN
    vwatch64_HEADER.CONNECTED = 0
    PUT #vwatch64_CLIENTFILE, 1, vwatch64_HEADER
END IF
CLOSE #vwatch64_CLIENTFILE
KILL "C:\Documents and Settings\Administrator\Desktop\qb64\vwatch64.dat"
ON ERROR GOTO 0
                    END
vwatch64_SKIP_102:::: 
            END SELECT

vwatch64_LABEL_105:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(105): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_105 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_105
            DO
vwatch64_SKIP_105:::: 
vwatch64_LABEL_106:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(106): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_106 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_106
                INPUT "Command (TIME, DATE, WISDOM, MSG>your message, BYE:", c$
vwatch64_SKIP_106:::: 
vwatch64_LABEL_107:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(107): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_107 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_107
            LOOP WHILE LEN(c$) = 0
vwatch64_SKIP_107:::: 

vwatch64_LABEL_109:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(109): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_109 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_109
            Send host, c$
vwatch64_SKIP_109:::: 
vwatch64_LABEL_110:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(110): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_110 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_110
            _DELAY .5
vwatch64_SKIP_110:::: 
vwatch64_LABEL_111:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(111): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_111 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_111
        LOOP
vwatch64_SKIP_111:::: 

vwatch64_LABEL_113:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(113): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_113 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_113
        _LIMIT 30
vwatch64_SKIP_113:::: 
vwatch64_LABEL_114:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(114): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_114 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_114
    LOOP WHILE host
vwatch64_SKIP_114:::: 
vwatch64_LABEL_115:::: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(115): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_115 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_115
END IF
vwatch64_SKIP_115:::: 

IF vwatch64_HEADER.CONNECTED THEN
    vwatch64_HEADER.CONNECTED = 0
    PUT #vwatch64_CLIENTFILE, 1, vwatch64_HEADER
END IF
CLOSE #vwatch64_CLIENTFILE
ON ERROR GOTO vwatch64_FILEERROR
KILL vwatch64_FILENAME

END
vwatch64_FILEERROR:
RESUME NEXT

vwatch64_CLIENTFILEERROR:
IF vwatch64_HEADER.CONNECTED THEN OPEN vwatch64_FILENAME FOR BINARY AS vwatch64_CLIENTFILE
RESUME

vwatch64_SETNEXTLINE:
SELECT CASE vwatch64_NEXTLINE
    CASE 3: GOTO vwatch64_LABEL_3
    CASE 4: GOTO vwatch64_LABEL_4
    CASE 5: GOTO vwatch64_LABEL_5
    CASE 9: GOTO vwatch64_LABEL_9
    CASE 10: GOTO vwatch64_LABEL_10
    CASE 11: GOTO vwatch64_LABEL_11
    CASE 12: GOTO vwatch64_LABEL_12
    CASE 13: GOTO vwatch64_LABEL_13
    CASE 14: GOTO vwatch64_LABEL_14
    CASE 15: GOTO vwatch64_LABEL_15
    CASE 16: GOTO vwatch64_LABEL_16
    CASE 17: GOTO vwatch64_LABEL_17
    CASE 18: GOTO vwatch64_LABEL_18
    CASE 19: GOTO vwatch64_LABEL_19
    CASE 20: GOTO vwatch64_LABEL_20
    CASE 22: GOTO vwatch64_LABEL_22
    CASE 23: GOTO vwatch64_LABEL_23
    CASE 24: GOTO vwatch64_LABEL_24
    CASE 26: GOTO vwatch64_LABEL_26
    CASE 27: GOTO vwatch64_LABEL_27
    CASE 28: GOTO vwatch64_LABEL_28
    CASE 29: GOTO vwatch64_LABEL_29
    CASE 31: GOTO vwatch64_LABEL_31
    CASE 36: GOTO vwatch64_LABEL_36
    CASE 37: GOTO vwatch64_LABEL_37
    CASE 38: GOTO vwatch64_LABEL_38
    CASE 39: GOTO vwatch64_LABEL_39
    CASE 41: GOTO vwatch64_LABEL_41
    CASE 43: GOTO vwatch64_LABEL_43
    CASE 45: GOTO vwatch64_LABEL_45
    CASE 46: GOTO vwatch64_LABEL_46
    CASE 48: GOTO vwatch64_LABEL_48
    CASE 49: GOTO vwatch64_LABEL_49
    CASE 51: GOTO vwatch64_LABEL_51
    CASE 52: GOTO vwatch64_LABEL_52
    CASE 54: GOTO vwatch64_LABEL_54
    CASE 56: GOTO vwatch64_LABEL_56
    CASE 57: GOTO vwatch64_LABEL_57
    CASE 58: GOTO vwatch64_LABEL_58
    CASE 59: GOTO vwatch64_LABEL_59
    CASE 60: GOTO vwatch64_LABEL_60
    CASE 61: GOTO vwatch64_LABEL_61
    CASE 62: GOTO vwatch64_LABEL_62
    CASE 64: GOTO vwatch64_LABEL_64
    CASE 66: GOTO vwatch64_LABEL_66
    CASE 67: GOTO vwatch64_LABEL_67
    CASE 68: GOTO vwatch64_LABEL_68
    CASE 69: GOTO vwatch64_LABEL_69
    CASE 70: GOTO vwatch64_LABEL_70
    CASE 71: GOTO vwatch64_LABEL_71
    CASE 72: GOTO vwatch64_LABEL_72
    CASE 76: GOTO vwatch64_LABEL_76
    CASE 77: GOTO vwatch64_LABEL_77
    CASE 79: GOTO vwatch64_LABEL_79
    CASE 80: GOTO vwatch64_LABEL_80
    CASE 81: GOTO vwatch64_LABEL_81
    CASE 82: GOTO vwatch64_LABEL_82
    CASE 83: GOTO vwatch64_LABEL_83
    CASE 84: GOTO vwatch64_LABEL_84
    CASE 86: GOTO vwatch64_LABEL_86
    CASE 91: GOTO vwatch64_LABEL_91
    CASE 92: GOTO vwatch64_LABEL_92
    CASE 93: GOTO vwatch64_LABEL_93
    CASE 94: GOTO vwatch64_LABEL_94
    CASE 96: GOTO vwatch64_LABEL_96
    CASE 98: GOTO vwatch64_LABEL_98
    CASE 100: GOTO vwatch64_LABEL_100
    CASE 101: GOTO vwatch64_LABEL_101
    CASE 102: GOTO vwatch64_LABEL_102
    CASE 105: GOTO vwatch64_LABEL_105
    CASE 106: GOTO vwatch64_LABEL_106
    CASE 107: GOTO vwatch64_LABEL_107
    CASE 109: GOTO vwatch64_LABEL_109
    CASE 110: GOTO vwatch64_LABEL_110
    CASE 111: GOTO vwatch64_LABEL_111
    CASE 113: GOTO vwatch64_LABEL_113
    CASE 114: GOTO vwatch64_LABEL_114
    CASE 115: GOTO vwatch64_LABEL_115
END SELECT

vwatch64_SETVARIABLE:
ON ERROR GOTO vwatch64_CLIENTFILEERROR
GET #vwatch64_CLIENTFILE, vwatch64_EXCHANGEBLOCK, vwatch64_EXCHANGEDATASIZE$4
vwatch64_TARGETVARINDEX = CVL(vwatch64_EXCHANGEDATASIZE$4)
GET #vwatch64_CLIENTFILE, , vwatch64_EXCHANGEDATASIZE$4
vwatch64_EXCHANGEDATA = SPACE$(CVL(vwatch64_EXCHANGEDATASIZE$4))
GET #vwatch64_CLIENTFILE, , vwatch64_EXCHANGEDATA
vwatch64_BREAKPOINT.ACTION = vwatch64_READY
PUT #vwatch64_CLIENTFILE, vwatch64_BREAKPOINTBLOCK, vwatch64_BREAKPOINT
ON ERROR GOTO vwatch64_FILEERROR

SELECT CASE vwatch64_TARGETVARINDEX
    CASE 1: client = _CV(LONG, vwatch64_EXCHANGEDATA)
    CASE 2: host = _CV(LONG, vwatch64_EXCHANGEDATA)
    CASE 5: a$ = vwatch64_EXCHANGEDATA
    CASE 6: incomingData$ = vwatch64_EXCHANGEDATA
    CASE 7: stream$ = vwatch64_EXCHANGEDATA
    CASE 8: thisData$ = vwatch64_EXCHANGEDATA
    CASE 9: thisCommand$ = vwatch64_EXCHANGEDATA
    CASE 10: myData$ = vwatch64_EXCHANGEDATA
    CASE 11: c$ = vwatch64_EXCHANGEDATA
END SELECT
ON ERROR GOTO 0
RETURN

SUB Send (channel, __theData$)
    vwatch64_SUBLEVEL = vwatch64_SUBLEVEL + 1
vwatch64_LABEL_118:::: GOSUB vwatch64_VARIABLEWATCH: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(118): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_118 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_118
    theData$ = __theData$ + "<END>"
vwatch64_SKIP_118:::: 
vwatch64_LABEL_119:::: GOSUB vwatch64_VARIABLEWATCH: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(119): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN GOTO vwatch64_SKIP_119 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_119
    PUT #channel, , theData$
vwatch64_SKIP_119:::: 
vwatch64_LABEL_120:::: GOSUB vwatch64_VARIABLEWATCH: vwatch64_NEXTLINE = vwatch64_CHECKBREAKPOINT(120): IF vwatch64_NEXTLINE > 0 THEN GOTO vwatch64_SETNEXTLINE ELSE IF vwatch64_NEXTLINE = -2 THEN vWATCH64_DUMMY%% = 0 ELSE IF vwatch64_NEXTLINE = -1 THEN GOSUB vwatch64_SETVARIABLE: GOTO vwatch64_LABEL_120
vwatch64_SUBLEVEL = vwatch64_SUBLEVEL - 1
EXIT SUB
vwatch64_SETNEXTLINE:
SELECT CASE vwatch64_NEXTLINE
    CASE 118: GOTO vwatch64_LABEL_118
    CASE 119: GOTO vwatch64_LABEL_119
    CASE 120: GOTO vwatch64_LABEL_120
END SELECT

vwatch64_VARIABLEWATCH:
IF vwatch64_HEADER.CONNECTED = 0 THEN RETURN
ON ERROR GOTO vwatch64_FILEERROR
    vwatch64_VARIABLEDATA(1).VALUE = STR$(client)
    vwatch64_VARIABLEDATA(2).VALUE = STR$(host)
    vwatch64_VARIABLEDATA(3).VALUE = STR$(channel)
    vwatch64_VARIABLEDATA(4).VALUE = __theData$
    vwatch64_VARIABLEDATA(12).VALUE = theData$
ON ERROR GOTO 0
RETURN


vwatch64_SETVARIABLE:
ON ERROR GOTO vwatch64_CLIENTFILEERROR
GET #vwatch64_CLIENTFILE, vwatch64_EXCHANGEBLOCK, vwatch64_EXCHANGEDATASIZE$4
vwatch64_TARGETVARINDEX = CVL(vwatch64_EXCHANGEDATASIZE$4)
GET #vwatch64_CLIENTFILE, , vwatch64_EXCHANGEDATASIZE$4
vwatch64_EXCHANGEDATA = SPACE$(CVL(vwatch64_EXCHANGEDATASIZE$4))
GET #vwatch64_CLIENTFILE, , vwatch64_EXCHANGEDATA
vwatch64_BREAKPOINT.ACTION = vwatch64_READY
PUT #vwatch64_CLIENTFILE, vwatch64_BREAKPOINTBLOCK, vwatch64_BREAKPOINT
ON ERROR GOTO vwatch64_FILEERROR

SELECT CASE vwatch64_TARGETVARINDEX
    CASE 1: client = _CV(LONG, vwatch64_EXCHANGEDATA)
    CASE 2: host = _CV(LONG, vwatch64_EXCHANGEDATA)
    CASE 3: channel = _CV(SINGLE, vwatch64_EXCHANGEDATA)
    CASE 4: __theData$ = vwatch64_EXCHANGEDATA
    CASE 12: theData$ = vwatch64_EXCHANGEDATA
END SELECT
GOSUB vwatch64_VARIABLEWATCH
ON ERROR GOTO 0
RETURN
END SUB


'--------------------------------------------------------------------------------
'vWATCH64 procedures:
'--------------------------------------------------------------------------------
SUB vwatch64_CONNECTTOHOST
    DIM k AS LONG
    DIM Message1$, Message2$, NoGo%
    DIM FileIsOpen%, FileExists%

    vwatch64_CHECKFILE:
    IF _FILEEXISTS(vwatch64_FILENAME) = 0 THEN
        Message1$ = "vWATCH64 doesn't seem to be running."
        Message2$ = "(Checking for 'vwatch64.dat'; ESC to cancel...)"
        IF NOT _SCREENHIDE AND _DEST <> _CONSOLE THEN
            _TITLE "Connecting to vWATCH64..."
            _PRINTSTRING(_WIDTH \ 2 - LEN(Message1$) \ 2, _HEIGHT \ 2), Message1$
            _PRINTSTRING(_WIDTH \ 2 - LEN(Message2$) \ 2, _HEIGHT \ 2 + 1), Message2$
        ELSE
            _CONSOLETITLE "Connecting to vWATCH64..."
            PRINT Message1$: PRINT Message1$
        END IF
        DO: _LIMIT 30
            k = _KEYHIT
            IF k = -27 THEN SYSTEM
            IF _FILEEXISTS(vwatch64_FILENAME) THEN _KEYCLEAR: EXIT DO
        LOOP
    END IF

    vwatch64_CLIENTFILE = 29145
    OPEN vwatch64_FILENAME FOR BINARY AS vwatch64_CLIENTFILE

    'Check if a connection is already active
    IF LOF(vwatch64_CLIENTFILE) > 0 THEN
        'Check if the file can be deleted; if so, vWATCH64 is not running.
        CLOSE #vwatch64_CLIENTFILE
        NoGo% = 0
        ON ERROR GOTO vwatch64_FILEERROR
        KILL vwatch64_FILENAME
        ON ERROR GOTO 0
        NoGo% = _FILEEXISTS(vwatch64_FILENAME)

        IF NoGo% THEN
            CLS
            Message1$ = "ERROR: vWATCH64 is already connected to another"
            Message2$ = "client/debuggee."
            IF NOT _SCREENHIDE AND _DEST <> _CONSOLE THEN
                _TITLE "FAILED!"
                _PRINTSTRING(_WIDTH \ 2 - LEN(Message1$) \ 2, _HEIGHT \ 2), Message1$
                _PRINTSTRING(_WIDTH \ 2 - LEN(Message2$) \ 2, _HEIGHT \ 2 + 1), Message2$
            ELSE
                _CONSOLETITLE "FAILED!"
                PRINT Message1$: PRINT Message1$
            END IF
            END
        END IF
        GOTO vwatch64_CHECKFILE
    ELSEIF LOF(vwatch64_CLIENTFILE) = 0 THEN
        'Check if the file can be deleted; if so, vWATCH64 is not running.
        CLOSE #vwatch64_CLIENTFILE
        ON ERROR GOTO vwatch64_FILEERROR
        KILL vwatch64_FILENAME
        ON ERROR GOTO 0
        IF _FILEEXISTS(vwatch64_FILENAME) = 0 THEN GOTO vwatch64_CHECKFILE
    END IF

    OPEN vwatch64_FILENAME FOR BINARY AS vwatch64_CLIENTFILE
    vwatch64_CLIENT.NAME = "C:\Documents and Settings\Administrator\Desktop\tcpip\tcpip.bas"
    vwatch64_CLIENT.CHECKSUM = vwatch64_CHECKSUM
    vwatch64_CLIENT.TOTALSOURCELINES = 120
    vwatch64_CLIENT.TOTALVARIABLES = 12
    vwatch64_CLIENT.PID = vwatch64_GETPID&
    vwatch64_CLIENT.EXENAME = COMMAND$(0)

    'Send this client's version and connection request
    vwatch64_HEADER.CLIENT_ID = vwatch64_ID
    vwatch64_HEADER.VERSION = vwatch64_VERSION
    vwatch64_HEADER.CONNECTED = -1
    PUT #vwatch64_CLIENTFILE, 1, vwatch64_HEADER
    PUT #vwatch64_CLIENTFILE, vwatch64_DATAINFOBLOCK, vwatch64_VARIABLES()

    'Wait for authorization:
    CLS
    Message1$ = "Waiting for authorization; ESC to cancel..."
    IF NOT _SCREENHIDE AND _DEST <> _CONSOLE THEN
        _PRINTSTRING(_WIDTH \ 2 - LEN(Message1$) \ 2, _HEIGHT \ 2), Message1$
    ELSE
        PRINT Message1$
    END IF
    DO: _LIMIT 30
        GET #vwatch64_CLIENTFILE, vwatch64_HEADERBLOCK, vwatch64_HEADER
        k = _KEYHIT
        IF k = -27 THEN SYSTEM
     LOOP UNTIL vwatch64_HEADER.RESPONSE = -1 OR vwatch64_HEADER.CONNECTED = 0

    IF vwatch64_HEADER.CONNECTED = 0 THEN
        SYSTEM
    END IF

    CLS
    IF NOT _SCREENHIDE AND _DEST <> _CONSOLE THEN
        _TITLE "Untitled"
    ELSE
        _CONSOLETITLE "Untitled"
    END IF
    PUT #vwatch64_CLIENTFILE, vwatch64_CLIENTBLOCK, vwatch64_CLIENT
END SUB

SUB vwatch64_VARIABLEWATCH
    SHARED a$
    SHARED incomingData$
    SHARED stream$
    SHARED thisData$
    SHARED thisCommand$
    SHARED myData$
    SHARED c$

    IF vwatch64_HEADER.CONNECTED = 0 THEN EXIT SUB
    ON ERROR GOTO vwatch64_FILEERROR
    vwatch64_VARIABLEDATA(1).VALUE = STR$(client)
    vwatch64_VARIABLEDATA(2).VALUE = STR$(host)
    vwatch64_VARIABLEDATA(5).VALUE = a$
    vwatch64_VARIABLEDATA(6).VALUE = incomingData$
    vwatch64_VARIABLEDATA(7).VALUE = stream$
    vwatch64_VARIABLEDATA(8).VALUE = thisData$
    vwatch64_VARIABLEDATA(9).VALUE = thisCommand$
    vwatch64_VARIABLEDATA(10).VALUE = myData$
    vwatch64_VARIABLEDATA(11).VALUE = c$
    ON ERROR GOTO vwatch64_CLIENTFILEERROR
    PUT #vwatch64_CLIENTFILE, vwatch64_DATABLOCK, vwatch64_VARIABLEDATA().VALUE
    ON ERROR GOTO 0
END SUB

FUNCTION vwatch64_CHECKBREAKPOINT&(LineNumber AS LONG)
    STATIC FirstRunDone AS _BYTE
    STATIC StepMode AS _BYTE
    STATIC StepAround AS _BYTE
    STATIC StartLevel AS INTEGER
    DIM k AS LONG
    DIM Message1$, Message2$

    IF FirstRunDone = 0 THEN
        IF vwatch64_HEADER.CONNECTED = 0 THEN
            _DELAY .5
            IF NOT _SCREENHIDE AND _DEST <> _CONSOLE THEN
                _TITLE "Untitled"
            ELSE
                _CONSOLETITLE "Untitled"
            END IF
            FirstRunDone = -1
            EXIT FUNCTION
        END IF
    ELSE
        IF vwatch64_HEADER.CONNECTED = 0 THEN EXIT FUNCTION
    END IF

    vwatch64_CLIENT.LINENUMBER = LineNumber
    ON ERROR GOTO vwatch64_CLIENTFILEERROR
    PUT #vwatch64_CLIENTFILE, vwatch64_CLIENTBLOCK, vwatch64_CLIENT

    'Check if step mode was initiated by the host:
    GET #vwatch64_CLIENTFILE, vwatch64_BREAKPOINTBLOCK, vwatch64_BREAKPOINT
    IF vwatch64_BREAKPOINT.ACTION = vwatch64_NEXTSTEP THEN StepMode = -1
    IF vwatch64_BREAKPOINT.ACTION = vwatch64_SKIPSUB THEN StartLevel = vwatch64_SUBLEVEL - 1: StepAround = -1

    GOSUB vwatch64_PING

    'Get the breakpoint list:
    vwatch64_BREAKPOINT.ACTION = vwatch64_READY
    PUT #vwatch64_CLIENTFILE, vwatch64_BREAKPOINTBLOCK, vwatch64_BREAKPOINT
    GET #vwatch64_CLIENTFILE, vwatch64_BREAKPOINTLISTBLOCK, vwatch64_BREAKPOINTLIST

    IF StepAround = -1 AND vwatch64_SUBLEVEL > StartLevel AND (ASC(vwatch64_BREAKPOINTLIST, LineNumber) <> 1) THEN EXIT FUNCTION
    IF StepAround = -1 AND vwatch64_SUBLEVEL = StartLevel THEN StepAround = 0

    vwatch64_VARIABLEWATCH
    IF vwatch64_CHECKWATCHPOINT = -1 THEN StepMode = -1

    'On the first time this procedure is called, execution is halted,
    'until the user presses F5 or F8 in vWATCH64
    IF FirstRunDone = 0 THEN
        Message1$ = "Hit F8 to run line by line or switch to vWATCH64 and hit F5 to run;"
        Message2$ = "(ESC to quit)"
        IF NOT _SCREENHIDE AND _DEST <> _CONSOLE THEN
            _TITLE Message1$
            _PRINTSTRING(_WIDTH \ 2 - LEN(Message1$) \ 2, _HEIGHT \ 2), Message1$
            _PRINTSTRING(_WIDTH \ 2 - LEN(Message2$) \ 2, _HEIGHT \ 2 + 1), Message2$
        ELSE
            _CONSOLETITLE "Switch to vWATCH64 and hit F5 to run or F8 to run line by line;"
        END IF
        VWATCH64_STOPTIMERS
        DO: _LIMIT 500
            GET #vwatch64_CLIENTFILE, vwatch64_BREAKPOINTBLOCK, vwatch64_BREAKPOINT
            IF vwatch64_BREAKPOINT.ACTION = vwatch64_SETNEXT THEN
                vwatch64_CHECKBREAKPOINT& = vwatch64_BREAKPOINT.LINENUMBER
                vwatch64_BREAKPOINT.ACTION = vwatch64_NEXTSTEP
                vwatch64_BREAKPOINT.LINENUMBER = 0
                PUT #vwatch64_CLIENTFILE, vwatch64_BREAKPOINTBLOCK, vwatch64_BREAKPOINT
                IF NOT _SCREENHIDE AND _DEST <> _CONSOLE THEN
                    _TITLE "Untitled": CLS
                ELSE
                    _CONSOLETITLE "Untitled": CLS
                END IF
                FirstRunDone = -1
                ON ERROR GOTO 0
                EXIT FUNCTION
            END IF
            k = _KEYHIT
            IF k = 16896 THEN vwatch64_BREAKPOINT.ACTION = vwatch64_NEXTSTEP 'F8
            IF k = -27 THEN 'ESC
                CLOSE #vwatch64_CLIENTFILE
                SYSTEM
            END IF
            _KEYCLEAR
            GOSUB vwatch64_PING
        LOOP UNTIL vwatch64_BREAKPOINT.ACTION = vwatch64_CONTINUE OR vwatch64_BREAKPOINT.ACTION = vwatch64_NEXTSTEP OR vwatch64_BREAKPOINT.ACTION = vwatch64_SETVAR OR vwatch64_BREAKPOINT.ACTION = vwatch64_SKIPSUB
        IF vwatch64_BREAKPOINT.ACTION = vwatch64_NEXTSTEP THEN StepMode = -1: StepAround = 0
        IF vwatch64_BREAKPOINT.ACTION = vwatch64_SKIPSUB THEN StartLevel = vwatch64_SUBLEVEL - 1: StepAround = -1: StepMode = -1
        IF vwatch64_BREAKPOINT.ACTION = vwatch64_SETVAR THEN
            vwatch64_CHECKBREAKPOINT& = -1
            StepMode = -1
        END IF
        IF NOT _SCREENHIDE AND _DEST <> _CONSOLE THEN
            _TITLE "Untitled": CLS
        ELSE
            _CONSOLETITLE "Untitled": CLS
        END IF
        FirstRunDone = -1
        ON ERROR GOTO 0
        VWATCH64_STARTTIMERS
        EXIT FUNCTION
    END IF

    IF (ASC(vwatch64_BREAKPOINTLIST, LineNumber) = 2) THEN
            vwatch64_CHECKBREAKPOINT& = -2
            EXIT FUNCTION
    END IF

    IF (ASC(vwatch64_BREAKPOINTLIST, LineNumber) = 1) OR (StepMode = -1) THEN
        VWATCH64_STOPTIMERS
        StepMode = -1
        DO: _LIMIT 500
            GET #vwatch64_CLIENTFILE, vwatch64_BREAKPOINTBLOCK, vwatch64_BREAKPOINT
            IF vwatch64_BREAKPOINT.ACTION = vwatch64_SETNEXT THEN
                vwatch64_CHECKBREAKPOINT& = vwatch64_BREAKPOINT.LINENUMBER
                vwatch64_BREAKPOINT.ACTION = vwatch64_NEXTSTEP
                vwatch64_BREAKPOINT.LINENUMBER = 0
                StepMode = -1
                PUT #vwatch64_CLIENTFILE, vwatch64_BREAKPOINTBLOCK, vwatch64_BREAKPOINT
                ON ERROR GOTO 0
                EXIT FUNCTION
            END IF
            k = _KEYHIT
            IF k = 16896 THEN vwatch64_BREAKPOINT.ACTION = vwatch64_NEXTSTEP 'F8
            _KEYCLEAR
            GOSUB vwatch64_PING
        LOOP UNTIL vwatch64_BREAKPOINT.ACTION = vwatch64_CONTINUE OR vwatch64_BREAKPOINT.ACTION = vwatch64_NEXTSTEP OR vwatch64_BREAKPOINT.ACTION = vwatch64_SETVAR OR vwatch64_BREAKPOINT.ACTION = vwatch64_SKIPSUB
        IF vwatch64_BREAKPOINT.ACTION = vwatch64_CONTINUE THEN StepMode = 0: StepAround = 0
        IF vwatch64_BREAKPOINT.ACTION = vwatch64_NEXTSTEP THEN StepAround = 0: StepMode = -1
        IF vwatch64_BREAKPOINT.ACTION = vwatch64_SKIPSUB THEN StartLevel = vwatch64_SUBLEVEL - 1: StepAround = -1: StepMode = -1
        IF vwatch64_BREAKPOINT.ACTION = vwatch64_SETVAR THEN
            vwatch64_CHECKBREAKPOINT& = -1
            StepMode = -1
        END IF
        VWATCH64_STARTTIMERS
    END IF

    ON ERROR GOTO 0
    EXIT FUNCTION
    vwatch64_PING:
    'Check if connection is still alive on host's end
    GET #vwatch64_CLIENTFILE, vwatch64_HEADERBLOCK, vwatch64_HEADER
    IF vwatch64_HEADER.CONNECTED = 0 THEN
        CLOSE vwatch64_CLIENTFILE
        IF FirstRunDone = 0 THEN FirstRunDone = -1: CLS: _TITLE "Untitled"
        VWATCH64_STARTTIMERS
        EXIT FUNCTION
    END IF
    RETURN
END SUB


FUNCTION vwatch64_CHECKWATCHPOINT
    DIM i AS LONG, DataType$
    GET #vwatch64_CLIENTFILE, vwatch64_WATCHPOINTLISTBLOCK, vwatch64_WATCHPOINTLIST
    FOR i = 1 TO 12
        IF ASC(vwatch64_WATCHPOINTLIST, i) = 1 THEN
            GET #vwatch64_CLIENTFILE, vwatch64_WATCHPOINTEXPBLOCK, vwatch64_WATCHPOINT()
            DataType$ = UCASE$(RTRIM$(vwatch64_VARIABLES(i).DATATYPE))
            IF INSTR(DataType$, "STRING") THEN DataType$ = "STRING"
            IF LEFT$(vwatch64_WATCHPOINT(i).VALUE, 1) = "=" THEN
                SELECT CASE DataType$
                    CASE "STRING"
                       IF RTRIM$(vwatch64_VARIABLEDATA(i).VALUE) = RTRIM$(MID$(vwatch64_WATCHPOINT(i).VALUE, 2)) THEN
                            GOTO WatchpointStop
                        END IF
                    CASE ELSE
                       IF VAL(RTRIM$(vwatch64_VARIABLEDATA(i).VALUE)) = VAL(RTRIM$(MID$(vwatch64_WATCHPOINT(i).VALUE, 2))) THEN
                           GOTO WatchpointStop
                        END IF
                END SELECT
            ELSEIF LEFT$(vwatch64_WATCHPOINT(i).VALUE, 2) = "<=" THEN
                SELECT CASE DataType$
                    CASE "STRING"
                        IF RTRIM$(vwatch64_VARIABLEDATA(i).VALUE) <= RTRIM$(MID$(vwatch64_WATCHPOINT(i).VALUE, 3)) THEN
                            GOTO WatchpointStop
                        END IF
                    CASE ELSE
                        IF VAL(RTRIM$(vwatch64_VARIABLEDATA(i).VALUE)) <= VAL(RTRIM$(MID$(vwatch64_WATCHPOINT(i).VALUE, 3))) THEN
                            GOTO WatchpointStop
                        END IF
                END SELECT
            ELSEIF LEFT$(vwatch64_WATCHPOINT(i).VALUE, 2) = ">=" THEN
                SELECT CASE DataType$
                    CASE "STRING"
                        IF RTRIM$(vwatch64_VARIABLEDATA(i).VALUE) >= RTRIM$(MID$(vwatch64_WATCHPOINT(i).VALUE, 3)) THEN
                            GOTO WatchpointStop
                        END IF
                    CASE ELSE
                        IF VAL(RTRIM$(vwatch64_VARIABLEDATA(i).VALUE)) >= VAL(RTRIM$(MID$(vwatch64_WATCHPOINT(i).VALUE, 3))) THEN
                            GOTO WatchpointStop
                        END IF
                END SELECT
            ELSEIF LEFT$(vwatch64_WATCHPOINT(i).VALUE, 2) = "<>" THEN
                SELECT CASE DataType$
                    CASE "STRING"
                        IF RTRIM$(vwatch64_VARIABLEDATA(i).VALUE) <> RTRIM$(MID$(vwatch64_WATCHPOINT(i).VALUE, 3)) THEN
                            GOTO WatchpointStop
                        END IF
                    CASE ELSE
                        IF VAL(RTRIM$(vwatch64_VARIABLEDATA(i).VALUE)) <> VAL(RTRIM$(MID$(vwatch64_WATCHPOINT(i).VALUE, 3))) THEN
                            GOTO WatchpointStop
                        END IF
                END SELECT
            ELSEIF LEFT$(vwatch64_WATCHPOINT(i).VALUE, 1) = "<" THEN
                SELECT CASE DataType$
                    CASE "STRING"
                        IF RTRIM$(vwatch64_VARIABLEDATA(i).VALUE) < RTRIM$(MID$(vwatch64_WATCHPOINT(i).VALUE, 2)) THEN
                            GOTO WatchpointStop
                        END IF
                    CASE ELSE
                        IF VAL(RTRIM$(vwatch64_VARIABLEDATA(i).VALUE)) < VAL(RTRIM$(MID$(vwatch64_WATCHPOINT(i).VALUE, 2))) THEN
                            GOTO WatchpointStop
                        END IF
                END SELECT
            ELSEIF LEFT$(vwatch64_WATCHPOINT(i).VALUE, 1) = ">" THEN
                SELECT CASE DataType$
                    CASE "STRING"
                        IF RTRIM$(vwatch64_VARIABLEDATA(i).VALUE) > RTRIM$(MID$(vwatch64_WATCHPOINT(i).VALUE, 2)) THEN
                            GOTO WatchpointStop
                        END IF
                    CASE ELSE
                        IF VAL(RTRIM$(vwatch64_VARIABLEDATA(i).VALUE)) > VAL(RTRIM$(MID$(vwatch64_WATCHPOINT(i).VALUE, 2))) THEN
                            GOTO WatchpointStop
                        END IF
                END SELECT
            END IF
        END IF
    NEXT i

    EXIT FUNCTION

   WatchpointStop:
   vwatch64_WATCHPOINTCOMMAND.ACTION = vwatch64_NEXTSTEP
   vwatch64_WATCHPOINTCOMMAND.LINENUMBER = i
   PUT #vwatch64_CLIENTFILE, vwatch64_WATCHPOINTCOMMANDBLOCK, vwatch64_WATCHPOINTCOMMAND
   vwatch64_CHECKWATCHPOINT = -1
END FUNCTION
'--------------------------------------------------------------------------------
'End of vWATCH64 procedures.
'--------------------------------------------------------------------------------
