': This program was generated by
': InForm - GUI system for QB64 - Beta version 7
': Fellippe Heitor, 2016-2018 - fellippe@qb64.org - @fellippeheitor
'-----------------------------------------------------------

': Controls' IDs: ------------------------------------------------------------------
DIM SHARED TheHost AS LONG
DIM SHARED NewRectangleBT AS LONG
DIM SHARED MakeItRedBT AS LONG
DIM SHARED MakeItARandomColorBT AS LONG
DIM SHARED ConnectionStatusLB AS LONG
DIM SHARED offlineLB AS LONG
DIM SHARED NewCircleBT AS LONG
DIM SHARED PictureBox1 AS LONG

DIM SHARED Host AS LONG, Client AS LONG
DIM SHARED lastPing AS SINGLE, lastPong AS SINGLE

REDIM SHARED PreviewControls(0) AS __UI_ControlTYPE
REDIM SHARED PreviewCaption(0) AS STRING

'$INCLUDE:'InForm\InForm.ui'
'$INCLUDE:'InForm\xp.uitheme'
'$INCLUDE:'TheHost.frm'

': Event procedures: ---------------------------------------------------------------
SUB __UI_BeforeInit

END SUB

SUB __UI_OnLoad
    SetFrameRate 200

    Caption(offlineLB) = "Starting as host..."
    Host = _OPENHOST("TCP/IP:1234")

END SUB

SUB __UI_BeforeUpdateDisplay
    'This event occurs at approximately 30 frames per second.
    'You can change the update frequency by calling SetFrameRate DesiredRate%

    STATIC stream$, prevLen AS LONG

    IF Client = 0 THEN
        IF Host = 0 THEN
            Caption(offlineLB) = "Failed to start as host.": EXIT SUB
        END IF

        Caption(offlineLB) = "Waiting for connection..."
        Client = _OPENCONNECTION(Host)

        IF Client < 0 THEN
            lastPong = TIMER
            lastPing = TIMER
        ELSE
            EXIT SUB
        END IF
    ELSE
        Caption(offlineLB) = _CONNECTIONADDRESS$(Client)
    END IF

    IF TIMER - lastPong > 10 THEN
        END
    END IF

    IF TIMER - lastPing > 5 THEN
        lastPing = TIMER
        b$ = MKI$(1) + "<END>"
        PUT #Client, , b$ 'ping
    END IF

    GET #Client, , st$
    stream$ = stream$ + st$

    IF INSTR(stream$, "<END>") > 0 THEN
        thisData$ = LEFT$(stream$, INSTR(stream$, "<END>") - 1)
        stream$ = MID$(stream$, INSTR(stream$, "<END>") + 5)
        SELECT CASE CVI(LEFT$(thisData$, 2))
            CASE 1 'pong
                _TITLE _TITLE$ + "PONG"
                lastPong = TIMER
            CASE 2 'image preview
                _TITLE "Image received..."
                DIM Buffer AS _MEM
                Buffer = _MEMIMAGE(Control(PictureBox1).HelperCanvas)
                thisData$ = MID$(thisData$, 3)
                _MEMPUT Buffer, Buffer.OFFSET, thisData$
                _MEMFREE Buffer
                _TITLE "Image received:" + STR$(LEN(thisData$) + 7) + " bytes"
                Control(PictureBox1).Hidden = False
                Control(PictureBox1).Redraw = True
            CASE 3 'control() dump
                thisData$ = MID$(thisData$, 3)
                size& = CVL(LEFT$(thisData$, 4))
                thisData$ = MID$(thisData$, 5)
                _TITLE LTRIM$(STR$(size&)) + "Controls received:" + STR$(LEN(thisData$) + 7) + " bytes."
                REDIM PreviewControls(size&) AS __UI_ControlTYPE
                Buffer = _MEM(PreviewControls())
                _MEMPUT Buffer, Buffer.OFFSET, thisData$
                _MEMFREE Buffer
            CASE 4 'caption() dump
                thisData$ = MID$(thisData$, 3)
                size& = CVL(LEFT$(thisData$, 4))
                thisData$ = MID$(thisData$, 5)

                REDIM PreviewCaption(size&) AS STRING
                FOR i = 1 TO size&
                    length = CVL(LEFT$(thisData$, 4))
                    IF length THEN
                        PreviewCaption(i) = MID$(thisData$, 5, length)
                    END IF
                    thisData$ = MID$(thisData$, 5 + length)
                NEXT

                $CONSOLE
                PD = _DEST
                _DEST _CONSOLE
                FOR i = 1 TO size&
                    b$ = RTRIM$(PreviewControls(i).Name)
                    IF ASC(b$, 1) > 0 THEN
                        PRINT i, b$, CHR$(34) + PreviewCaption(i) + CHR$(34)
                    END IF
                NEXT
                _DEST PD
            CASE ELSE
                _TITLE STR$(CVI(LEFT$(thisData$, 2))) + STR$(LEN(thisData$))
        END SELECT
    END IF

END SUB

SUB __UI_BeforeUnload
    'If you set __UI_UnloadSignal = False here you can
    'cancel the user's request to close.

END SUB

SUB __UI_Click (id AS LONG)
    SELECT CASE id
        CASE TheHost

        CASE NewRectangleBT
            IF Client THEN
                signal$ = MKI$(2) + "<END>"
                PUT #Client, , signal$
            END IF
        CASE MakeItRedBT
            IF Client THEN
                signal$ = MKI$(4) + "<END>"
                PUT #Client, , signal$
            END IF
        CASE MakeItARandomColorBT
            IF Client THEN
                signal$ = MKI$(5) + "<END>"
                PUT #Client, , signal$
            END IF
        CASE ConnectionStatusLB

        CASE offlineLB

        CASE NewCircleBT
            IF Client THEN
                signal$ = MKI$(3) + "<END>"
                PUT #Client, , signal$
            END IF
        CASE PictureBox1
            Control(PictureBox1).Hidden = True
            _TITLE "The host"
    END SELECT
END SUB

SUB __UI_MouseEnter (id AS LONG)
    SELECT CASE id
        CASE TheHost

        CASE NewRectangleBT

        CASE MakeItRedBT

        CASE MakeItARandomColorBT

        CASE ConnectionStatusLB

        CASE offlineLB

        CASE NewCircleBT

    END SELECT
END SUB

SUB __UI_MouseLeave (id AS LONG)
    SELECT CASE id
        CASE TheHost

        CASE NewRectangleBT

        CASE MakeItRedBT

        CASE MakeItARandomColorBT

        CASE ConnectionStatusLB

        CASE offlineLB

        CASE NewCircleBT

    END SELECT
END SUB

SUB __UI_FocusIn (id AS LONG)
    SELECT CASE id
        CASE NewRectangleBT

        CASE MakeItRedBT

        CASE MakeItARandomColorBT

        CASE NewCircleBT

    END SELECT
END SUB

SUB __UI_FocusOut (id AS LONG)
    'This event occurs right before a control loses focus.
    'To prevent a control from losing focus, set __UI_KeepFocus = True below.
    SELECT CASE id
        CASE NewRectangleBT

        CASE MakeItRedBT

        CASE MakeItARandomColorBT

        CASE NewCircleBT

    END SELECT
END SUB

SUB __UI_MouseDown (id AS LONG)
    SELECT CASE id
        CASE TheHost

        CASE NewRectangleBT

        CASE MakeItRedBT

        CASE MakeItARandomColorBT

        CASE ConnectionStatusLB

        CASE offlineLB

        CASE NewCircleBT

    END SELECT
END SUB

SUB __UI_MouseUp (id AS LONG)
    SELECT CASE id
        CASE TheHost

        CASE NewRectangleBT

        CASE MakeItRedBT

        CASE MakeItARandomColorBT

        CASE ConnectionStatusLB

        CASE offlineLB

        CASE NewCircleBT

    END SELECT
END SUB

SUB __UI_KeyPress (id AS LONG)
    'When this event is fired, __UI_KeyHit will contain the code of the key hit.
    'You can change it and even cancel it by making it = 0
    SELECT CASE id
        CASE NewRectangleBT

        CASE MakeItRedBT

        CASE MakeItARandomColorBT

        CASE NewCircleBT

    END SELECT
END SUB

SUB __UI_TextChanged (id AS LONG)
    SELECT CASE id
    END SELECT
END SUB

SUB __UI_ValueChanged (id AS LONG)
    SELECT CASE id
    END SELECT
END SUB

SUB __UI_FormResized

END SUB

